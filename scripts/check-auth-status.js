#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js')
const fs = require('fs')
const path = require('path')

console.log('üîê VERIFICANDO STATUS DE AUTENTICA√á√ÉO')
console.log('=' .repeat(50))

// Ler vari√°veis de ambiente
function loadEnv() {
  const envPath = path.join(__dirname, '..', '.env')
  if (fs.existsSync(envPath)) {
    const envContent = fs.readFileSync(envPath, 'utf8')
    const lines = envContent.split('\n')
    
    const env = {}
    lines.forEach(line => {
      if (line.includes('=') && !line.startsWith('#')) {
        const [key, ...valueParts] = line.split('=')
        env[key.trim()] = valueParts.join('=').trim()
      }
    })
    return env
  }
  return {}
}

async function checkAuthStatus() {
  try {
    const env = loadEnv()
    const supabaseUrl = env.NEXT_PUBLIC_SUPABASE_URL
    const supabaseKey = env.NEXT_PUBLIC_SUPABASE_ANON_KEY
    
    console.log('üîó Conectando no Supabase...')
    const supabase = createClient(supabaseUrl, supabaseKey)
    
    // Verificar se consegue acessar auth
    console.log('\nüß™ Testando autentica√ß√£o...')
    
    try {
      const { data: { user }, error } = await supabase.auth.getUser()
      
      if (error) {
        console.log('‚ùå Erro de auth:', error.message)
      } else if (user) {
        console.log('‚úÖ Usu√°rio logado:')
        console.log(`   ID: ${user.id}`)
        console.log(`   Email: ${user.email}`)
        console.log(`   Criado: ${user.created_at}`)
      } else {
        console.log('‚ùå Nenhum usu√°rio logado')
      }
    } catch (authError) {
      console.log('‚ùå Erro ao verificar auth:', authError.message)
    }
    
    // Verificar se existem usu√°rios no banco
    console.log('\nüë• Verificando usu√°rios no banco...')
    
    try {
      const { data: users, error: usersError } = await supabase
        .from('users')
        .select('*')
      
      if (usersError) {
        console.log('‚ùå Erro ao buscar usu√°rios:', usersError.message)
      } else {
        console.log(`üìä Total de usu√°rios no banco: ${users?.length || 0}`)
        
        if (users && users.length > 0) {
          users.forEach((user, i) => {
            console.log(`\n   ${i+1}. Email: ${user.email}`)
            console.log(`      Role: ${user.role}`)
            console.log(`      ID: ${user.id}`)
            console.log(`      Criado: ${user.created_at}`)
          })
        }
      }
    } catch (err) {
      console.log('‚ùå Erro ao verificar usu√°rios:', err.message)
    }
    
    console.log('\nüéØ DIAGN√ìSTICO:')
    console.log('‚îÄ'.repeat(50))
    
    // Fazer diagn√≥stico baseado nos resultados
    const { data: users } = await supabase.from('users').select('*')
    const { data: { user: currentUser } } = await supabase.auth.getUser()
    
    if (!users || users.length === 0) {
      console.log('üö® PROBLEMA: Nenhum usu√°rio no banco')
      console.log('   SOLU√á√ÉO: Registre-se em http://localhost:3000/auth/sign-up')
    } else if (!currentUser) {
      console.log('üö® PROBLEMA: Voc√™ n√£o est√° logado')
      console.log('   SOLU√á√ÉO: Fa√ßa login em http://localhost:3000/auth/login')
    } else {
      console.log('‚úÖ Voc√™ est√° logado e tem usu√°rios no banco')
      
      // Verificar se o usu√°rio logado est√° no banco
      const userInDb = users.find(u => u.id === currentUser.id)
      if (!userInDb) {
        console.log('‚ö†Ô∏è  PROBLEMA: Usu√°rio logado n√£o est√° na tabela users')
        console.log('   SOLU√á√ÉO: Problema de sincroniza√ß√£o entre auth e users')
      } else if (userInDb.role !== 'admin') {
        console.log('‚ö†Ô∏è  PROBLEMA: Usu√°rio n√£o √© admin')
        console.log('   SOLU√á√ÉO: Tornar usu√°rio admin no banco')
      } else {
        console.log('‚úÖ Tudo OK! Problema deve ser nas chaves de API')
      }
    }
    
    console.log('\nüìã PR√ìXIMOS PASSOS:')
    console.log('1. Se n√£o tem conta ‚Üí Registre-se')
    console.log('2. Se tem conta ‚Üí Fa√ßa login')
    console.log('3. Se est√° logado ‚Üí Verifique se √© admin')
    console.log('4. Se √© admin ‚Üí Adicione chaves de API v√°lidas')
    
  } catch (error) {
    console.error('üí• ERRO FATAL:', error.message)
  }
}

checkAuthStatus() 